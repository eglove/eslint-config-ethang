/* eslint-disable @typescript-eslint/no-unsafe-call,unicorn/prefer-module */
require("@rushstack/eslint-patch/modern-module-resolution");

module.exports = {
  ignorePatterns: [
    "*.config.ts",
    "*.config.js",
    "*.d.ts",
    "dist",
    "node_modules",
  ],
  env: {
    es2024: true,
  },
  parserOptions: {
    project: "./tsconfig.json",
  },
  extends: [
    "plugin:unicorn/all",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:typescript-sort-keys/recommended",
    "plugin:functional/external-vanilla-recommended",
    "plugin:functional/external-typescript-recommended",
    "plugin:react/all",
    "plugin:react-hooks/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:jsx-a11y/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier",
  ],
  plugins: [
    "functional",
    "simple-import-sort",
    "sort-keys-fix",
    "unused-imports",
    "prettier",
  ],
  rules: {
    // Possible Problems
    "array-callback-return": [
      "error",
      {
        allowImplicit: true,
      },
    ],
    "constructor-super": "error",
    "for-direction": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "off", // Handled by @typescript/eslint
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "off", // Handled by simple-import-sort
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-ex-assign": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "off", // Handled by @typescript/eslint
    "no-misleading-character-class": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-symbol": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-self-assign": ["error", { props: true }],
    "no-self-compare": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-undef": ["error", { typeof: true }],
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": ["error", { enforceForOrderingRelations: true }],
    "no-unsafe-optional-chaining": [
      "error",
      { disallowArithmeticOperators: true },
    ],
    "no-unused-private-class-members": "error",
    "no-unused-vars": "off", // Handled by @typescript/eslint
    "no-useless-backreference": "error",
    "require-atomic-updates": ["error", { allowProperties: true }],
    "use-isnan": "error",
    "valid-typeof": ["error", { requireStringLiterals: false }],

    // Suggestions
    "accessor-pairs": ["error", { enforceForClassMembers: true }],
    "arrow-body-style": ["error", "always"],
    "block-scoped-var": "error",
    camelcase: [
      "error",
      {
        properties: "always",
        ignoreDestructuring: true,
        ignoreImports: true,
        ignoreGlobals: true,
      },
    ],
    complexity: "error",
    curly: "error",
    "default-case": "error",
    "default-case-last": "error",
    "default-param-last": "off", // Handled by @typescript/eslint
    "dot-notation": "off", // Handled by @typescript/eslint
    eqeqeq: "error",
    "func-name-matching": [
      "error",
      {
        considerPropertyDescriptor: true,
      },
    ],
    "func-names": ["error", "never"],
    "func-style": ["error", "declaration", { allowArrowFunctions: true }],
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "guard-for-in": "error",
    "logical-assignment-operators": [
      "error",
      "always",
      { enforceForIfStatements: true },
    ],
    "max-classes-per-file": "error",
    "max-depth": "error",
    "max-lines": "error",
    "max-lines-per-function": "error",
    "max-nested-callbacks": "error",
    "max-params": "off", // Handled by @typescript/eslint
    "max-statements": "error",
    "multiline-comment-style": "error",
    "new-cap": ["error", { newIsCap: true, capIsNew: true }],
    "no-alert": "error",
    "no-array-constructor": "off", // Handled by @typescript/eslint
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-console": "error",
    "no-delete-var": "error",
    "no-div-regex": "error",
    "no-else-return": ["error", { allowElseIf: false }],
    "no-empty": ["error", { allowEmptyCatch: true }],
    "no-empty-function": "off", // Handled by @typescript/eslint
    "no-empty-static-block": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "off", // Handled by @typescript/eslint
    "no-inline-comments": "error",
    "no-invalid-this": "off", // Handled by @typescript/eslint
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-magic-numbers": "off", // Handled by @typescript/eslint
    "no-multi-assign": "error",
    "no-multi-str": "error",
    "no-negated-condition": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-object-constructor": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-plusplus": "error",
    "no-proto": "error",
    "no-redeclare": "off", // Handled by @typescript/eslint
    "no-regex-spaces": "error",
    "no-return-assign": ["error", "always"],
    "no-script-url": "error",
    "no-sequences": "error",
    "no-shadow-restricted-names": "error",
    "no-throw-literal": "off", // Handled by @typescript/eslint
    "no-undef-init": "error",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": "off", // Handled by @typescript/eslint
    "no-unused-labels": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": ["error", { enforceForClassMembers: true }],
    "no-useless-concat": "error",
    "no-useless-constructor": "off", // Handled by @typescript/eslint
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "warn",
    "no-with": "error",
    "object-shorthand": [
      "error",
      "always",
      { avoidExplicitReturnArrows: true },
    ],
    "one-var": ["error", "never"],
    "operator-assignment": ["error", "always"],
    "prefer-arrow-callback": ["error", { allowNamedFunctions: true }],
    "prefer-const": ["error", { destructuring: "all" }],
    "prefer-destructuring": "off", // Handled by @typescript/eslint
    "prefer-exponentiation-operator": "error",
    "prefer-named-capture-group": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-has-own": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "off", // Handled by @typescript/eslint
    "prefer-regex-literals": ["error", { disallowRedundantWrapping: true }],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    radix: "error",
    "require-await": "off", // Handled by @typescript/eslint
    "no-return-await": "off", // Handled by @typescript/eslint
    "require-unicode-regexp": "error",
    "require-yield": "error",
    "sort-keys": "error",
    "sort-vars": "error",
    "symbol-description": "error",
    yoda: "error",

    // Layout & formatting
    "line-comment-position": "error",
    "unicode-bom": ["error", "never"],

    // React
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": ["error", { extensions: [".jsx", ".tsx"] }],
    "react/jsx-no-literals": "off",
    "react-hooks/exhaustive-deps": "error",
    "react/jsx-sort-props": [
      "error",
      {
        callbacksLast: true,
        shorthandFirst: true,
        noSortAlphabetically: true,
        reservedFirst: true,
      },
    ],

    // TypeScript
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/max-params": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-magic-numbers": "error",
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/prefer-destructuring": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "error",
      { checkParameterProperties: false, ignoreInferredTypes: true },
    ],
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/sort-type-constituents": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/typedef": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        vars: "all",
        varsIgnorePattern: /^_/.source,
        args: "after-used",
        ignoreRestSiblings: true,
        argsIgnorePattern: /^_/.source,
        caughtErrors: "all",
        caughtErrorsIgnorePattern: /^_$/.source,
      },
    ],
    "@typescript-eslint/return-await": "error",

    "prettier/prettier": [
      "error",
      {
        arrowParens: "avoid",
        endOfLine: "crlf",
        printWidth: 80,
        singleQuote: true,
        trailingComma: "all",
      },
    ],
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": "error",
    "sort-keys-fix/sort-keys-fix": "error",
    "unicorn/no-keyword-prefix": "off",
    "unicorn/no-null": "off",
    "unicorn/prefer-set-has": "error",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        args: "after-used",
        argsIgnorePattern: "^_",
        vars: "all",
        varsIgnorePattern: "^_",
      },
    ],
  },
};
